# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class PersistenceProfileView(UncheckedBaseModel):
    """
    View model for representing a persistence profile

    Attributes:
        id: Unique identifier for the profile

            last_used_at: Timestamp when the profile was last used

        created_at: Timestamp when the profile was created
        updated_at: Timestamp when the profile was last updated
    """

    id: str
    last_used_at: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="lastUsedAt")] = None
    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")]
    updated_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="updatedAt")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
