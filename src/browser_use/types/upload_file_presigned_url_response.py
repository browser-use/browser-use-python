# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class UploadFilePresignedUrlResponse(UncheckedBaseModel):
    """
    Response model for a presigned upload URL

    Attributes:
        url: The URL to upload the file to
        method: The HTTP method to use for the upload
        fields: The form fields to include in the upload request
        file_name: The name of the file to upload (should be referenced when user wants to use the file in a task)
        expires_in: The number of seconds until the presigned URL expires
    """

    url: str
    method: typing.Literal["POST"] = "POST"
    fields: typing.Dict[str, str]
    file_name: typing_extensions.Annotated[str, FieldMetadata(alias="fileName")]
    expires_in: typing_extensions.Annotated[int, FieldMetadata(alias="expiresIn")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
