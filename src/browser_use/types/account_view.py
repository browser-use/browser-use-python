# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class AccountView(UncheckedBaseModel):
    """
    View model for account information

    Attributes:
        monthly_credits_balance_usd: The monthly credits balance in USD
        additional_credits_balance_usd: The additional credits balance in USD
        email: The email address of the user
        name: The name of the user
        signed_up_at: The date and time the user signed up
    """

    monthly_credits_balance_usd: typing_extensions.Annotated[float, FieldMetadata(alias="monthlyCreditsBalanceUsd")]
    additional_credits_balance_usd: typing_extensions.Annotated[
        float, FieldMetadata(alias="additionalCreditsBalanceUsd")
    ]
    email: typing.Optional[str] = None
    name: typing.Optional[str] = None
    signed_up_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="signedUpAt")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
