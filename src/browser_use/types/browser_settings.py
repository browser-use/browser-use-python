# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class BrowserSettings(UncheckedBaseModel):
    """
    Browser viewport and behavior settings

    Attributes:
            viewport_width: Browser viewport width in pixels
            viewport_height: Browser viewport height in pixels
            is_mobile: Whether the browser should be in mobile view
            store_cache: Whether to store browser cache
    """

    viewport_width: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="viewportWidth")] = None
    viewport_height: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="viewportHeight")] = None
    is_mobile: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="isMobile")] = None
    store_cache: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="storeCache")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
