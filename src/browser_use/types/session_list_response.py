# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .session_item_view import SessionItemView


class SessionListResponse(UncheckedBaseModel):
    """
    Response model for paginated session list requests

    Attributes:
        items: List of session views for the current page
    """

    items: typing.List[SessionItemView]
    total_items: typing_extensions.Annotated[int, FieldMetadata(alias="totalItems")]
    page_number: typing_extensions.Annotated[int, FieldMetadata(alias="pageNumber")]
    page_size: typing_extensions.Annotated[int, FieldMetadata(alias="pageSize")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
